nextflow.enable.dsl = 2

// Enable Docker for ALL runs by default:
docker {
  enabled = true
}

process {
  // Copy every processâ€™s declared outputs into ${params.out_dir}/
  publishDir = { _ -> params.out_dir }
}

profiles {
  docker {
    docker { enabled = true }
    process { executor = 'local' }
  }
}

params {
  mode          = null  // "Analysis mode: wes or amplicon"
  reads_dir     = null  // "Folder containing paired FASTQs (_R1_*.fastq.gz & _R2_*.fastq.gz)"
  bams_dir      = null  // "Folder containing BAM files (_sorted.bam)"
  vcfs_dir      = null  // "Folder containing VCF files (_variants.vcf.gz)"
  bam_vcf_dir   = null  // "Folder containing BAM and VCF files"
  assembly      = 'hg38'  // "Reference genome: hg19 or hg38"
  panel         = null // "Panel name"
  run_id        = "${params.panel ?: 'panel'}_${params.assembly ?: 'assembly'}_r${String.format('%06d', (int)(Math.random() * 1_000_000))}" // "Run ID"
  mincov        = null // "Minimum coverage threshold"
  minvaf        = null // "Minimum variant allele frequency threshold"
  minvad        = null  // "Minimum variant allele depth threshold"
  dedup_mode    = null // "Deduplication mode: umi or simple or none"
  vep_cache     = "${System.getenv('HOME')}/.vep" // "Path to local VEP cache"
  cpus          = 4 // "Number of CPUs to use for each process"
  date          = new Date().format('yyyy-MM-dd')
  out_dir       = "varflow.${params.run_id ?: 'run'}.${params.date}"
  help          = false // "Show help message"
}
